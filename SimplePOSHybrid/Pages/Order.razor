@page "/order"
@layout MainLayout
@using SimplePOSHybrid.Data
@using SimplePOSHybrid.Models.PartnerMenu
@using SimplePOSHybrid.Components
@inject IDialogService DialogService
@inject NavigationManager Navigation

<MudLayout>
    <MudAppBar Style="background-color:#053B71;color:white" Fixed="false" Dense="false" DisableGutters="false" Class="pa-0">
        <MudGrid>
            <MudItem xs="1" Class="d-flex align-center justify-left">
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" />
            </MudItem>
            <MudItem xs="5" Class="d-flex align-center justify-left pa-0">
                <MudText Class="ml-4" Style="font-weight:800;font-size:large">@UserCompany</MudText>
            </MudItem>
            <MudItem xs="4" Class="d-flex align-bottom justify-left">

            </MudItem>
            <MudItem xs="2" Class="d-flex align-bottom ">
                <MudGrid>
                    <MudItem xs="8" Style="align-items:center;justify-content:end;display:flex;">
                        <MudText>@UserName</MudText>
                    </MudItem>
                    <MudItem xs="4">
                        <MudIconButton Icon="@Icons.Material.Filled.Logout" Style="color:white" Href="/" />
                    </MudItem>

                </MudGrid>

            </MudItem>

        </MudGrid>
        @*<MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" />
        <MudText Class="ml-4" Style="font-weight:800;font-size:large">BLX Super Mart</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.Logout" Style="color:white" Href="/" />*@
    </MudAppBar>
    <MudMainContent Class="pa-0 pl-3 pr-3">
        
            <MudGrid Class="pt-3">
                <MudItem xs="6" >

                    <MudGrid>
                        <MudItem xs="2" Class="pb-1 pt-2"></MudItem>
                        <MudItem xs="6" Class="mt-2 pt-2">
                            <MudSelect Dense="true" Margin="Margin.Dense" T="string" Label="Order Type" Variant="Variant.Filled" >
                                <MudSelectItem Value="@("Credit")" />
                                <MudSelectItem Value="@("Debit")" />
                            </MudSelect>
                        </MudItem>
                        <MudItem xs="1" Class="mt-2 pt-2">
                            <MudIconButton Icon="@Icons.Material.Filled.PersonAddAlt1" OnClick="OpenRegUser" aria-label="add user"></MudIconButton>
                        </MudItem>
                        <MudItem xs="3" Class="mt-2 pt-2">
                            <MudIconButton Icon="@Icons.Material.Filled.KeyboardArrowDown" OnClick="OpenExtUsers" aria-label="users"></MudIconButton>
                        </MudItem>
                        <MudItem xs="12" Class="pt-2">
                        <div class="ma-0" style="height: calc( 100vh - 400px);overflow: auto">
                            @{
                                    for (int i = 0; i < orderitems.Count(); i++)
                                    {
                                        orderitems[i].ID = i;
                                    }
                                }
                            <MudDataGrid Items="@OrderItemsState.ToList().Where(x=>x.isActive==1)" Hover="true" Striped="true" Dense="true">

                                <Columns>
                                    <Column T="Menuitemlist" StickyLeft="true" Class="removeicon">
                                        <CellTemplate>
                                            <MudIconButton OnClick="@(() => ClickConfirmDelete(@context.Item))" Color="@Color.Default" Icon="@Icons.Material.Filled.Delete" />
                                        </CellTemplate>
                                    </Column>
                                    <Column T="Menuitemlist" Field="ItemName" Title="Name" />
                                    <Column T="Menuitemlist" Field="qty" Title="Qty">
                                        <CellTemplate>

                                            <MudGrid Style="padding-left:unset;padding-right:unset">
                                                <MudItem xs="3" Class="d-flex align-center justify-center ">
                                                    <MudIconButton Icon="@Icons.Material.Filled.AddCircle" Variant="Variant.Filled" Size="Size.Small" @onclick="(() => {context.Item.qty = context.Item.qty + 1;RecalculateTotal();})" />
                                                </MudItem>
                                                <MudItem xs="6" Class="d-flex align-center justify-center pa-2">
                                                    <MudNumericField @bind-Value="@context.Item.qty" Margin="Margin.Dense" Style="text-align:center" HideSpinButtons="true" />
                                                </MudItem>
                                                <MudItem xs="3" Class="d-flex align-center justify-center pa-0">
                                                    <MudIconButton Icon="@Icons.Material.Filled.RemoveCircle" Variant="Variant.Filled" Size="Size.Small" @onclick="(() => {context.Item.qty = context.Item.qty - 1;RecalculateTotal();})" />
                                                </MudItem>
                                            </MudGrid>
                                        </CellTemplate>
                                    </Column>
                                    <Column T="Menuitemlist" Field="OptionalSalesPrice" Title="Price" CellStyle="text-align: right">
                                        <CellTemplate>
                                            <MudText Typo="Typo.subtitle1">@context.Item.OptionalSalesPrice.ToString("0.00")</MudText>
                                        </CellTemplate>
                                    </Column>
                                    <Column T="Menuitemlist" Title="%" CellStyle="text-align: right">
                                        <CellTemplate>
                                            <MudText @bind-Value="DiscountValue" Typo="Typo.body2">@DiscountValue</MudText>
                                        </CellTemplate>
                                    </Column>
                                    <Column T="Menuitemlist" Title="Total" CellStyle="text-align: right">
                                        <CellTemplate>
                                            @{

                                                var total = (context.Item.OptionalSalesPrice * context.Item.qty) * (1 - (DiscountValue / 100.00));
                                                double truncatedtotal = Math.Round(total, 2);

                                            }
                                            <MudText Typo="Typo.body2">

                                                @truncatedtotal.ToString("0.00")
                                            </MudText>
                                        </CellTemplate>
                                    </Column>
                                </Columns>
                            </MudDataGrid>
                        </div>
                        </MudItem>
                    <MudItem xs="12" Class="pa-4">
                        <MudPaper Class="pa-4 ma-0" Outlined="true" Elevation="3" Style="background-color:#e6e6e6;border:none">
                            <MudGrid>
                                <MudItem xs="12" Class="pt-1 pb-1 ma-0">
                                    <MudGrid>
                                        <MudItem xs="6" Class="d-flex align-center justify-left">
                                            <MudText Typo="Typo.caption" Style="font-weight:bold">Sub Total:</MudText>
                                        </MudItem>
                                        <MudItem xs="6" Class="d-flex align-center justify-end">
                                            <MudText Typo="Typo.caption" Style="font-weight:bold" @bind-Value="subtotal">@subtotal.ToString("0.00")</MudText>
                                        </MudItem>
                                    </MudGrid>
                                </MudItem>
                                <MudItem xs="12" Class="pt-0 pb-0 ma-0">
                                    <MudGrid>
                                        <MudItem xs="6" Class="d-flex align-center justify-left">
                                            <MudText Typo="Typo.caption" Style="font-weight:bold">Discount:</MudText>
                                        </MudItem>
                                        <MudItem xs="6" Class="d-flex align-center justify-end">
                                            <MudText Typo="Typo.caption" Style="font-weight:bold">@FinalDiscount.ToString("0.00")</MudText>
                                        </MudItem>
                                    </MudGrid>
                                </MudItem>
                                <MudItem xs="12" Class="pb-1 pt-1 ma-0">
                                    <MudGrid>
                                        <MudItem xs="6" Class="d-flex align-center justify-left">
                                            <MudText Typo="Typo.caption" Style="font-weight:bold">Net Total:</MudText>
                                        </MudItem>
                                        <MudItem xs="6" Class="d-flex align-center justify-end">
                                            <MudText Typo="Typo.caption" Style="font-weight:bold">@NetTotal.ToString("0.00")</MudText>
                                        </MudItem>
                                    </MudGrid>
                                </MudItem>
                            </MudGrid>
                        </MudPaper>
                        </MudItem>
                        <MudItem xs="12">
                            <MudGrid Class="pr-2 pl-2 pt-0 pb-0">
                                <MudItem xs="6" Class="d-flex align-center justify-center py-4">
                                    <MudButton Variant="Variant.Filled" @onclick="@(() => Goback())" StartIcon="@Icons.Material.Filled.Reply" Style="background-color:#0866c4;color:white" Size="Size.Large">Back</MudButton>
                                   </MudItem>
                                <MudItem xs="6" Class="d-flex align-center justify-center py-4">
                                    <MudButton Variant="Variant.Filled" @onclick="@(() => ClickTotdiscount())" StartIcon="@Icons.Material.Filled.Percent" Style="background-color:#0866c4;color:white" Size="Size.Large">Discount</MudButton>
                                     </MudItem>
                                
                            </MudGrid>
                        </MudItem>        
                    </MudGrid>
                </MudItem>
            <MudItem xs="6" >
                    <MudGrid>
                        <MudItem xs="12" Class="d-flex align-center justify-center py-4">
                            <MudGrid>
                                <MudItem xs="4"></MudItem>
                                <MudItem xs="4">
                                    <MudSelect @bind-Value="stringValue" Dense="true" Margin="Margin.Dense" T="string" Label="Payment Type" Variant="Variant.Filled">
                                        <MudSelectItem Value="@("Cash")" />
                                        <MudSelectItem Value="@("Credit")" />
                                    </MudSelect>
                                </MudItem>
                                <MudItem xs="4"></MudItem>
                            </MudGrid> 
                        </MudItem>
                        <MudItem xs="12" >
                        <MudText Typo="Typo.h4" Class="d-flex align-center justify-center py-4">@NetTotal.ToString("0.00")</MudText>
                            <MudText Typo="Typo.h6" Class="d-flex align-center justify-center py-4">Total Amount Due</MudText>
                        </MudItem>
                        <MudItem xs="12">
                            @if (stringValue == "Cash")
                            {
                                <MudGrid >
                                    <MudItem xs="5" Class="d-flex align-center justify-center py-4">
                                        <MudText Typo="Typo.h5"> Cash Received</MudText>
                                    </MudItem>
                                    <MudItem xs="4" Class="d-flex align-center justify-center py-4">
                                        <MudTextField @bind-Value="Amount" Label="Amount" Variant="Variant.Outlined" Adornment="Adornment.Start"  AdornmentColor="Color.Warning" />
                                    </MudItem>
                                    <MudItem xs="3" Class="d-flex align-center justify-center py-4">
                                        <MudButton @onclick="Cash"  Variant="Variant.Filled" DisableElevation="true" Class="py-4" Style="font-weight:bold; background-color:#053B71;color:white">Pay</MudButton>
                                    </MudItem>
                                    <MudItem xs="12">
                                        <MudGrid>
                                            <MudItem xs="2"></MudItem>
                                            <MudItem xs="4" Class="d-flex align-center justify-center py-4">
                                                <MudButton @onclick="Cash" Variant="Variant.Filled" DisableElevation="true" Class="py-4" Style="font-weight:bold; background-color:darkgray;color:white;font-size:large">60.00</MudButton>
                                            </MudItem>
                                            <MudItem xs="4" Class="d-flex align-center justify-center py-4">
                                                <MudButton @onclick="Cash" Variant="Variant.Filled" DisableElevation="true" Class="py-4" Style="font-weight:bold; background-color:darkgray;color:white;font-size:large">150.00</MudButton>
                                            </MudItem>
                                            <MudItem xs="2"></MudItem>
                                        </MudGrid>
                                    </MudItem>
                                </MudGrid>
                            }
                            else 
                            {
                                <MudGrid>
                                    <MudItem xs="8" Class="d-flex align-center justify-center py-4">
                                        <MudText>
                                            <MudSelect @bind-Value="customerSelection" Dense="true" Margin="Margin.Dense" T="string" Label="Select Customer" Variant="Variant.Filled">
                                                <MudSelectItem Value="@("Cash")" />
                                                <MudSelectItem Value="@("Credit")" />
                                            </MudSelect>
                                        </MudText>
                                    </MudItem>
                                    <MudItem xs="4" Class="d-flex align-center justify-center py-4">
                                        <MudButton @onclick="Credit" Variant="Variant.Filled" DisableElevation="true" Class="py-4" Style="font-weight:bold; background-color:#053B71;color:white">Pay Credit</MudButton>
                                    </MudItem>
                                </MudGrid>
                            }

                        </MudItem>

                    </MudGrid>
                </MudItem>


            </MudGrid>

        
    </MudMainContent>


</MudLayout>

@code {

    public string Amount { get; set; }

    public string balance { get; set; } 

    private string stringValue { get; set; }

    private string customerSelection { get; set; }

    public decimal DecimalValue { get; set; }

    public double NetTotal { get; set; } = 0.00;

    public double DiscountValue { get; set; } = 1.00;

    public double FinalDiscountPer { get; set; } = 10.00;

    public double FinalDiscount { get; set; } = 0.00;

    public double subtotal { get; set; } = 0.00;

    private IEnumerable<Menuitemlist> test = new List<Menuitemlist>();

    private List<Menuitemlist> OrderItemsState { get; set; }

    private List<Menuitemlist> orderitems = new List<Menuitemlist>();

    public string UserName { get; set; } = "Username";

    public string UserCompany { get; set; } = "Company";


    private void OpenExtUsers()
    {
        DialogService.Show<Dialog>("Choose Customer");
    }

    private void OpenRegUser()
    {
        DialogOptions closeOnEscapeKey = new DialogOptions() { CloseOnEscapeKey = true };

        DialogService.Show<RegUser>("Add Customer", closeOnEscapeKey);
    }
    void Goback()
    {
        Navigation.NavigateTo("/home");
    }

    protected override void OnInitialized()
    {
        UserName = _loginState.GetUserName();
        Console.WriteLine(UserName);

        var Company = _loginState.GetUserCompany();
        UserCompany = Company.CompanyName;
        Console.WriteLine(UserCompany);
        //Elements = _orderState.GetElements();
        OrderItemsState = _orderState.GetOrderitems();
        RecalculateTotal();
        //Console.WriteLine(Elements);
        StateHasChanged();

    }

    private async void ClickConfirmDelete(Menuitemlist x)
    {
        var parameters = new DialogParameters();
        parameters.Add("Elementpara", x);
        parameters.Add("TitleText", "ALERT!");
        parameters.Add("ContentText", "Do you need to remove the item");
        parameters.Add("ButtonText1", "Yes");
        parameters.Add("ButtonText2", "No");
        var dialog = DialogService.Show<ConfirmDelete>("Choose Confirm Delete", parameters);
        using var task = dialog.Result;
        var result = await task;
        if (!result.Cancelled)
        {
            RemoveItem(x);
        }
        StateHasChanged();
        check();
    }

    void check()
    {
        Console.WriteLine(OrderItemsState);
    }
    //DialogOptions maxWidth = new DialogOptions() { MaxWidth = MaxWidth.Small };

    private void Cash()
    {
        balance = "10.00";
        var parameters = new DialogParameters();
        parameters.Add("ContentText", "Balance" +balance);
        parameters.Add("ButtonText", "Start new sale");
        parameters.Add("TitleText", "Sales Completed");
        parameters.Add("Color", Color.Info);

        DialogService.Show<SalesComp>("Sales Completed", parameters);
    }

    private void Credit()
    {
        var parameters = new DialogParameters();
        parameters.Add("ContentText", "Credit purchase have been approved to Dana's account.");
        parameters.Add("ButtonText", "Start new sale");
        parameters.Add("TitleText", "Sales Completed");
        parameters.Add("Color", Color.Info);

        DialogService.Show<SalesComp>("Sales Completed", parameters);
    }

    private void ClickTotdiscount()
    {
        var parameters = new DialogParameters();
        parameters.Add("ContentText", "Please select a discount type.");
        parameters.Add("ButtonText1", "Set Discount");
        parameters.Add("ButtonText2", "Cancel Discount");
        DialogService.Show<Totdiscount>("Choose Total discount", parameters);
    }

    void RecalculateTotal()
    {
        
        List<Menuitemlist> newState = OrderItemsState.Where(item => item.isActive == 1).ToList();

        subtotal = newState.Sum(item => item.OptionalSalesPrice);
        StateHasChanged();

        double totalre = 0.00;
        foreach (var it in newState)
        {
            totalre += (it.OptionalSalesPrice * it.qty) * (1 - (DiscountValue / 100.00));
            subtotal = Math.Round(totalre, 2);
        }


        FinalDiscount = subtotal * (FinalDiscountPer / 100.00);
        FinalDiscount = Math.Round(FinalDiscount, 2);
        NetTotal = subtotal * (1 - FinalDiscountPer / 100.00);
        NetTotal = Math.Round(NetTotal, 2);


    }

    private void RemoveItem(Menuitemlist x)
    {
        OrderItemsState = _orderState.GetOrderitems();
        x.isActive = 0;
        RecalculateTotal();
        StateHasChanged();
    }
    
}