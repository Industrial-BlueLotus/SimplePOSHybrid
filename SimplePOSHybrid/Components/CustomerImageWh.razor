<div style="position: relative; cursor: pointer;padding:unset" @onclick="@this.Clicked">

    @* the image *@
    <MudImage Src="@this.Src" Alt="@this.Alt" Height="90" Class="rounded-lg" Style="border:thin;border-color:darkgray;border-radius:10px;width:100%" />

    @* A transparent background for the text *@
    <MudPaper Elevation="0"
              Class="rounded-lg"
              Style="position: absolute; bottom: 0; left: 0; width: 100%; height:45px">

        @* Hack: the text is needed to give the transparent part the proper height, but will also display the text in 0.6 transparency *@
        @*<MudText Typo="Typo.body2" Style="font-weight:bold;width: 80px;white-space: nowrap; overflow: hidden;text-overflow: ellipsis;height:40px;" Align="Align.Center">@this.Name</MudText>
        <MudText Typo="Typo.caption" Style="width: 80px;white-space: nowrap; overflow: hidden;text-overflow: ellipsis;height:40px;" Class="d-flex align-center justify-center">@this.ShortName</MudText>*@
    </MudPaper>

    @* The text (in black) *@
    <span style="position: absolute; bottom: inherit; left: 0; padding-left:10px;padding-bottom:4px;width: 30px">
        @*<MudText Typo="Typo.body2" Style="font-weight:bold;width: 90px;white-space: nowrap; overflow: hidden;text-overflow: ellipsis">@this.Name</MudText>*@
        <MudText Typo="Typo.body2" Style="width: 90px;color:black;font-weight:bold;white-space: nowrap; overflow: hidden;text-overflow: ellipsis">@this.ShortName</MudText>
    </span>

    @* The price (in black) *@
    <span style="position: absolute; bottom: 0; left: 0; padding-left:10px;padding-bottom:4px;width: 30px; color: black">
        @*<MudText Typo="Typo.body2" Style="font-weight:bold;width: 90px;white-space: nowrap; overflow: hidden;text-overflow: ellipsis">@this.Name</MudText>*@
        <MudText Typo="Typo.body2" Style="width: 90px;color:dimgrey;white-space: nowrap; overflow: hidden;text-overflow: ellipsis">@this.OptionalSalesPrice</MudText>
    </span>

</div>

@code {

    [Parameter]
    public string Src { get; set; } = default!;

    [Parameter]
    public string Alt { get; set; } = string.Empty;

    //[Parameter]
    //public string Name { get; set; } = default!;

    [Parameter]
    public string ShortName { get; set; } = default!;

    [Parameter]
    public double OptionalSalesPrice { get; set; } = default!;

    [Parameter]
    public EventCallback OnClick { get; set; }

    private async Task Clicked()
    {
        await this.OnClick.InvokeAsync();
    }
}